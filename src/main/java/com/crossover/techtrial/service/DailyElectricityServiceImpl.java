package com.crossover.techtrial.service;


import com.crossover.techtrial.dto.DailyElectricity;
import com.crossover.techtrial.model.HourlyElectricity;
import com.crossover.techtrial.repository.DailyElectricityRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import java.util.LongSummaryStatistics;

/**
 * DailyElectricityServiceImpl will fetch daily statistics of electricity generated <BR/>
 * by this Panel from the day it registered to end of previous day.
 *
 *
 */

@Service
public class DailyElectricityServiceImpl implements DailyElectricityService {
    @Autowired
    DailyElectricityRepository dailyElectricityRepository;

    public List<DailyElectricity> getAllDailyElectricityByPanelId(Long panelId){

        List<DailyElectricity> dailyElectricityList = new ArrayList<>();

        List<HourlyElectricity> hourlyElectricityList = dailyElectricityRepository.getAllDailyElectricityByPanelIdOrderByDate(panelId);

        LocalDateTime today = LocalDateTime.of(LocalDate.now(), LocalTime.MIDNIGHT);

        // Aggreage sum, min, max, average and return for electricity generated by this panel each day up to the end of previous day ,
        if(hourlyElectricityList!=null && !hourlyElectricityList.isEmpty()){

            LongSummaryStatistics stats =   hourlyElectricityList.stream()
                    .filter(e -> e.getPanel().getId().equals(panelId))
                    .filter(hourlyElectricity-> hourlyElectricity.getReadingAt().isBefore(today))
                    .mapToLong((hourlyElectricity) -> hourlyElectricity.getGeneratedElectricity()).summaryStatistics();

            stats.getAverage();

        }

        return dailyElectricityList;
    }


}